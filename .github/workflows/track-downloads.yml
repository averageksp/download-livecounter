name: Update Download History

on:
  workflow_dispatch:
  schedule:
    - cron: '20 5 * * *'
    - cron: '30 5 * * *' 

jobs:
  update-history:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download latest download_counts.json
        run: curl -sSL https://raw.githubusercontent.com/KSP-CKAN/CKAN-meta/master/download_counts.json -o download_counts.json

      - name: Read last recorded date
        id: read_last
        run: |
          if [ -f history.json ]; then
            LAST=$(jq -r 'if length>0 then .[-1].date else "" end' history.json)
          else
            echo "[]" > history.json
            LAST=""
          fi
          echo "LAST_DATE=$LAST" >> $GITHUB_ENV

      - name: Read upstream commit date
        id: upstream_commit
        run: |
          DATE=$(curl -s https://api.github.com/repos/KSP-CKAN/CKAN-meta/commits?path=download_counts.json\&per_page=1 \
            | jq -r '.[0].commit.committer.date' | cut -d'T' -f1)
          echo "UPSTREAM_DATE=$DATE" >> $GITHUB_ENV

      - name: Skip if scheduled run and up‑to‑date
        if: ${{ github.event_name != 'workflow_dispatch' && env.UPSTREAM_DATE == env.LAST_DATE }}
        run: |
          echo "No new update (last: $LAST_DATE). Skipping."
          exit 0

      - name: Check for existing date and update history.json
        run: |
          # Check if the date already exists in the history.json
          DATE_EXISTS=$(jq --arg date "$UPSTREAM_DATE" 'map(select(.date == $date)) | length > 0' history.json)
          if [ "$DATE_EXISTS" == "true" ]; then
            echo "Date $UPSTREAM_DATE already exists in history.json. Skipping update."
            exit 0
          fi

          # If the date doesn't exist, append the new entry
          jq --arg date "$UPSTREAM_DATE" --slurpfile d download_counts.json '
            . += [{
              date: $date,
              KerbalChecklists:      ($d[0].KerbalChecklists // 0),
              WasdMainMenu:          ($d[0].WasdMainMenu // 0),
              "RP-1-Checklists":     ($d[0]["RP-1-Checklists"] // 0),
              KerbalismChecklist:    ($d[0].KerbalismChecklist // 0)  # Added Kerbalism Checklist
            }]
          ' history.json > history.tmp.json
          mv history.tmp.json history.json

      - name: Commit & Push history.json
        uses: EndBug/add-and-commit@v9
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          add: history.json
          message: |
            Update download history for ${{ env.UPSTREAM_DATE }}
