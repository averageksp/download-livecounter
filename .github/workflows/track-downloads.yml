name: ðŸ“Š Track Mod Downloads History

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'  # every day at 12:00 UTC
  # optional: also run when download_counts.json changes upstream
  repository_dispatch:
    types: [download_counts_updated]

jobs:
  update-history:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch latest counts
        run: |
          curl -s \
            https://raw.githubusercontent.com/KSP-CKAN/CKAN-meta/6ce43b260868a4bea1bd081b039b7b66c13d06cc/download_counts.json \
            -o download_counts.json

      - name: Validate JSON
        run: |
          jq . download_counts.json > /dev/null

      - name: Build new entry
        id: build
        run: |
          TODAY=$(date +%F)
          MODS='["KerbalChecklists","WasdMainMenu","RP-1-Checklists"]'
          DOWNLOADS=$(jq -c '.' download_counts.json)
          NEW=$(jq -n \
            --arg date "$TODAY" \
            --argjson d "$DOWNLOADS" \
            --argjson mods "$MODS" \
            '{
              date: $date
            } + (reduce $mods[] as $m ({}; .[$m] = ($d[$m] // 0)))')
          echo "::set-output name=entry::$NEW"

      - name: Update history.json
        run: |
          ENTRY="${{ steps.build.outputs.entry }}"
          if [ -f history.json ] && [ -s history.json ]; then
            jq --argjson e "$ENTRY" '. + [$e]' history.json > tmp.json
          else
            jq -n --argjson e "$ENTRY" '[ $e ]' > tmp.json
          fi
          mv tmp.json history.json

      - name: Commit & Push
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          message: "ðŸ“ˆ Update download history for ${{ steps.build.outputs.entry | fromJson | .date }}"
          add: "history.json"
          token: ${{ secrets.GITHUB_TOKEN }}
